server:
  port: 8082

spring:
  application:
    name: user-service

  # Kafka Configuration
  kafka:
    # The default value is for Docker Compose, can be overridden for other environments
    bootstrap-servers: ${SPRING_KAFKA_BOOTSTRAP_SERVERS:kafka:9092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

  # Eureka client configuration
  cloud:
    discovery:
      client:
        service-url:
          # The default value is for Docker Compose
          defaultZone: ${EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE:http://eureka-server:8761/eureka/}
    instance:
      prefer-ip-address: true

  # Datasource Configuration with placeholders
  datasource:
    # Placeholder for the DB URL. Default is for local testing.
    url: ${SPRING_DATASOURCE_URL:jdbc:mysql://localhost:3306/employeeSystem}
    # Placeholder for the DB username.
    username: ${SPRING_DATASOURCE_USERNAME:root}
    # Placeholder for the DB password.
    password: ${SPRING_DATASOURCE_PASSWORD:9090}
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        format_sql: true
    show-sql: true

# JWT Secret Configuration with a placeholder
jwt:
  secret: ${JWT_SECRET:yourStrongSecretKey123456789012345678901234567890}
  expiration: 36000000

logging:
  level:
    org.springframework.security: DEBUG
    org.example: DEBUG